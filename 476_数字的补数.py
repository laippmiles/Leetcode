'''
给定一个正整数，输出它的补数。补数是对该数的二进制表示取反。
注意:
1.给定的整数保证在32位带符号整数的范围内。
2.你可以假定二进制数不包含前导零位。

示例 1:
输入: 5
输出: 2
解释: 5的二进制表示为101（没有前导零位），其补数为010。所以你需要输出2。

示例 2:
输入: 1
输出: 0
解释: 1的二进制表示为1（没有前导零位），其补数为0。所以你需要输出0。
'''
class Solution:
    def findComplement(self, num):
        """
        :type num: int
        :rtype: int
        """
        num = bin(num)[2:]
        dicn = {'1':'0','0':'1'}
        #建个字典用来01互换
        ans = ''
        for i in num:
            ans += dicn[i]
        return int(ans,2)#任何进制换成十进制的操作